#!/usr/bin/ruby
 
# Dropzone Destination Info
# Name: HTML5 Boilerplate
# Description: Clone latest github repository of HTML5 Boilerplate into folder dragged onto destination.
# Events: Dragged
# Handles: NSFilenamesPboardType
# Creator: Marcell Jusztin
# URL: http://www.marcelljusztin.com
# IconURL: http://marcelljusztin.com/images/boilerplate_icon.png

def dragged
  folder_path = $items[0]
  if File::ftype(folder_path).eql? 'directory'
    output = `./CocoaDialog standard-inputbox --title "Clone repo into folder" --e --informative-text "Enter name for new folder (leave it empty to clone into dragged folder):"`
    new_folder_name = output.split("\n")[1]
    Dir.chdir(folder_path)
  	$dz.determinate(true)
  	$dz.begin("Cloning HTML5 Boilerplate")
  	begin
  	  git_clone(folder_path, new_folder_name) # Do the magic
  	rescue Exception => e
  	  $dz.error("Error", e)
  	  $dz.finish("Quitting.")
      $dz.url(false)
	  end
    $dz.finish("Quitting.")
    $dz.url(false)
  else
    $dz.alert("Wrong type", "Dragged item is not a folder")
    $dz.finish("Quitting.")
  	$dz.url(false)
  end
end

def git_clone(dragged_folder, folder)
  r, w = IO.pipe # Assign I/O
  if folder.nil?  # Cloning to subfolder?
    child = fork{ STDERR.reopen w; w.close; `git clone git://github.com/h5bp/html5-boilerplate.git #{dragged_folder} --progress &` } # Fork github thread and open STDERR
  else
    Dir.mkdir(folder) unless File.exists?(folder)
    child = fork{ STDERR.reopen w; w.close; `git clone git://github.com/h5bp/html5-boilerplate.git #{folder} --progress &` } # Fork github thread and open STDERR
  end
  w.close
  while(( l = r.read(100) )) # Read STDERR
    error = /fatal/.match(l.inspect) # Look for error message
    if error.nil?
      percent = /\d+%(?!.*\d+%)/.match(l.inspect) # Match the last occurance of the percentage
      $dz.percent(percent.to_s.gsub("\%","")) unless percent.nil? # Get rid of "%" sign and pass value to progressbar
    else
      $dz.error("Git Error", l.inspect) # Output error message
    end
  end
end